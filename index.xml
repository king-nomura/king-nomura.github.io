<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> 野村政行の「堪忍袋の緒を締めろ！」</title>
    <link>https://diary.a3size.com/</link>
    <description>Recent content on  野村政行の「堪忍袋の緒を締めろ！」</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>nomura masayuki</copyright>
    <lastBuildDate>Wed, 02 Jan 2019 22:33:45 +0900</lastBuildDate>
    
        <atom:link href="https://diary.a3size.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>2018年は映画を観ていない</title>
      <link>https://diary.a3size.com/2019/01/02/</link>
      <pubDate>Wed, 02 Jan 2019 22:33:45 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2019/01/02/</guid>
      <description>&lt;p&gt;気づいたらまたしても日記書いていなかったじゃないか。しかも去年の映画視聴記録もまとめていないじゃないか。&lt;/p&gt;

&lt;p&gt;というわけで、急いで作った：&lt;a href=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vRpc5DX-Aw_6eeZjT3SFNZBCz7tVNKTpFox77lW_kG6-2KQHiQY0erbuITxNp0_DopC3KJ00qJuo1xz/pubhtml?gid=2109559652&amp;single=true&#34; target=&#34;_blank&#34;&gt;もう一度観たい映画2018&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;いつものように、もう一度観たいかどうかという観点で順番をつけているが、大まかな雰囲気で並べているんだなぁと思ってもらいたい。&lt;/p&gt;

&lt;p&gt;そんなことより、圧倒的に2018年は観ている本数が少ない。Amazonプライムでもっぱらドラマシリーズものに手を出してしまっているせいで、自宅でもあまり映画は観ていない。
観たかった映画とうまくタイミングが合わなかっただけではなく、観たい映画自体がちょっと少なかった印象がある。ここ数年見逃していた作品や、ルーツ的なものや関連作品として古い作品への興味が高まっているので、本当はレンタルなどでもっとそういう作品を見るべきなのだろう。&lt;/p&gt;

&lt;p&gt;例えば、今更ながら「ロッキー」を観た。さすが、面白いよね、「ロッキー」。さすがに古い作品だし低予算ならではの淡白さもありながら、これが若者たちに受け入れられた時代背景なども含めて興味深い作品だと思う。&lt;/p&gt;

&lt;p&gt;というわけで2019年はひょっとすると古い作品をたくさん観るかもしれない。&lt;/p&gt;

&lt;p&gt;……いやまてよ、やっぱりたくさんは観ないかもしれない。今、Amazonプライムでずっと「ゲーム・オブ・スローンズ」を観ているので、それが観終わるまではちょっと……。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>ゲームを消化したい</title>
      <link>https://diary.a3size.com/2018/06/24/</link>
      <pubDate>Sun, 24 Jun 2018 14:04:46 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/06/24/</guid>
      <description>

&lt;p&gt;「暇になったらやるリスト」がゲーム以外に山積みなので、本当にやりたいゲームは「暇じゃなくてもやるリスト」に入れないといけない。人生のスケジューリングに失敗している。またはどうにかしてマルチタスク人間になる必要があるが、そうすると自分Aよりも自分Bのやっていることが楽しそうで自分Aが怒り出す、という事態が。こんな話を藤子不二雄の漫画で読んだ気がする（多分ドラえもん）。&lt;/p&gt;

&lt;h2 id=&#34;detroit-become-human&#34;&gt;DETROIT: BECOME HUMAN&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B07B6CLVR8/ref=as_li_ss_il?ie=UTF8&amp;linkCode=li3&amp;tag=diarya3sizeco-22&amp;linkId=b2b35bee9ae5fc30815945a9e28ee458&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B07B6CLVR8&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=diarya3sizeco-22&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://ir-jp.amazon-adsystem.com/e/ir?t=diarya3sizeco-22&amp;l=li3&amp;o=9&amp;a=B07B6CLVR8&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.quanticdream.com/fr/&#34; target=&#34;_blank&#34;&gt;Quantic Dream&lt;/a&gt;の最新作、&lt;a href=&#34;https://www.jp.playstation.com/games/detroit-become-human/&#34; target=&#34;_blank&#34;&gt;DETROIT: BECOME HUMAN&lt;/a&gt;をとりあえず一周目終了。UIがカッコイイということで普段ゲームをやらない層でも話題になっているらしいが、そんな理由でいいのでまあプレイして欲しいゲームだ。&lt;/p&gt;

&lt;p&gt;で、一周目終了したのだが、自分が観たストーリーを人に教えたくない。何故ならば、このゲームは分岐が多い上に正解がない。他の人がプレイしたら違うストーリーになっているはずで(もちろん大筋は変わらないと思うが)、しかも自分が選んだ選択のせいで知ることができなくなった伏線や謎もあって、他人とこのゲームの話がしたいのに話ができないじゃないか！フラストレーション！&lt;/p&gt;

&lt;p&gt;例えば、これは多くのところでネタバレされているがメニュー画面に登場するアンドロイド「クロエ」も本編に絡んでくる上に、「初めてチューリング・テストに合格したアンドロイド」(&lt;a href=&#34;https://ja.wikipedia.org/wiki/デトロイト_ビカム_ヒューマン&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;)というあたりで、「チューリング・テストに合格ってことはつまり、え？え？」みたいな。スタートボタン押してからメニュー画面出ている間にちょっとトイレ行ってくるわ、みたいなこともできない。&lt;/p&gt;

&lt;p&gt;その大筋の話をすると、アンドロイドと人間の区別が付かなくなったらどうなりますか、という話。「ブレードランナー」 + Quantic Dreamらしい人の心理にこだわったストーリーとなっている。映画のようにぼおっと観ていたいのに、操作を迫られるから困る(そして嬉しい)。&lt;/p&gt;

&lt;p&gt;早く二周目やりたいが、それ以外にやらねばならないゲームが。というかゲーム以外ががが。&lt;/p&gt;

&lt;h3 id=&#34;life-is-strange-before-the-storm&#34;&gt;LIFE IS STRANGE: Before the Storm&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B07B422RFF/ref=as_li_ss_il?ie=UTF8&amp;linkCode=li3&amp;tag=diarya3sizeco-22&amp;linkId=600c2ae3c63dc9f93dac9b7249e2683b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B07B422RFF&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=diarya3sizeco-22&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://ir-jp.amazon-adsystem.com/e/ir?t=diarya3sizeco-22&amp;l=li3&amp;o=9&amp;a=B07B422RFF&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;http://www.jp.square-enix.com/lisbts/&#34; target=&#34;_blank&#34;&gt;ライフ イズ ストレンジ ビフォア ザ ストーム&lt;/a&gt;」(カタカナで書くとむっちゃかっこ悪い)は「&lt;a href=&#34;http://www.jp.square-enix.com/lis/&#34; target=&#34;_blank&#34;&gt;LIFE IS STRANGE&lt;/a&gt;」の外伝。&lt;/p&gt;

&lt;p&gt;外伝なので本編よりも長くはないし、本編のファンにとっては本編に登場する登場人物があちこちに出てくるボーナスコンテンツくらいな感じではある。ただ、今からプレイする人がいるならば、どっちからやってもいいかなーとは思う。それくらい、単体でも成り立つように丁寧に作られていたと思う。&lt;/p&gt;

&lt;p&gt;一貫して、思春期の心の痛みや人生の選択についての話ではあるが、本作品ではもう一つ「人生は舞台」「誰のために嘘をつくのか」というテーマがあり、これもまたある意味で人生の選択だよなぁ、と思う。薬物描写が出てくるためにCEROが「D」だが、リアル10代がプレイするよりもおっさんおばさんになってからプレイしたほうが、主人公を見守る大人たちの視点も持てて楽しめる気がする。&lt;/p&gt;

&lt;h3 id=&#34;日本語版-について&#34;&gt;「日本語版」について&lt;/h3&gt;

&lt;p&gt;「LIFE IS STRANGE: Before the Storm」(以下、「LiS:BtS」)は結構前にSteamで英語(つまり全世界バージョンの)PC版を購入だけしておいて、やがて日本語吹き替え音声が追加ダウンロードになるまで、と放置していた。&lt;/p&gt;

&lt;p&gt;「DETROIT: BECOME HUMAN」が終わった直後にPS4を何気なく操作してオンラインショップに行ったらば、PS4版がちょうど配信開始されていた。「あれ？もしかして日本語吹き替え版が完成したってことか？」と慌ててSteamを観てみると、なんとPS4版発売と同じ日にSteamの日本語吹き替えも配信されているではないか！ということで速攻ダウンロード＆プレイ開始となった。&lt;/p&gt;

&lt;p&gt;「LiS:BtS」は全世界発売元がスクウェア・エニックスだし、前作も国内販売版があり、発売前から「日本語吹き替え作っているよ！」と公式アナウンスが早々にあったので吹き替えが終わるのを待つことができた。だが、これは結構メーカーが「頑張った」対応で、一ゲーマーとしては感謝しかないのである。&lt;/p&gt;

&lt;p&gt;「わざわざ日本語に翻訳する」という作業にコストをかけるからにはそれだけ「日本語版なら買う」というユーザーの数が必要になる。しかも「日本語版にするために先に買う」人はいないのだから、この翻訳作業は先行投資になる。翻訳だけではなく吹き替えも、となると声優が必要となるので更にコスト増だ。&lt;/p&gt;

&lt;p&gt;翻訳の質にしてもいくつもの選択肢がある。専門チームを作る、外部の翻訳サービスを使う、「機械翻訳」を噛ますだけの場合もあれば、最悪ファンが作った翻訳を使うという選択肢さえあるが、それでも翻訳コストは無料にはならない。なぜなら、わざわざ「英語を日本語に差し替える」作業が発生するからだ。&lt;/p&gt;

&lt;p&gt;本作、「LiS:BtS」の日本語吹き替えは見事なできばえだが、それでもPC版では音声のズレなど不自然な箇所はいくつかあった。そもそも翻訳は、音声であっても文字であっても、元々の英語と吹き替えの日本語の長さが違うから、単に差し替えるだけではなくて詰めたり伸ばしたりしないとおかしなことになる。ゲームの場合はさらに条件分岐で表現が変わる可能性があるので、作業量が増える。&lt;/p&gt;

&lt;p&gt;世界の面白いゲームを日本語でプレイしたければ、日本語でプレイしたいユーザーがここにいるぞ！ということを発信しなければならない。さもなくば、頑張って英語を覚えるしかない。ゲームに限らず他のものでもそうなのだが。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>しつこいけれど、また自動化の話</title>
      <link>https://diary.a3size.com/2018/05/22/</link>
      <pubDate>Tue, 22 May 2018 01:32:13 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/05/22/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://diary.a3size.com/2018/04/21/&#34;&gt;以前書いた&lt;/a&gt;ように、この日記はMarkdown形式のテキストファイルを&lt;a href=&#34;https://bitbucket.org/&#34; target=&#34;_blank&#34;&gt;BitBucket&lt;/a&gt;のレポジトリにPUSHすると、CIサービスである&lt;a href=&#34;http://www.wercker.com&#34; target=&#34;_blank&#34;&gt;Wercker&lt;/a&gt;がWebhookされ、&lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;によってhtmlファイルを生成して、そのhtmlファイルを&lt;a href=&#34;https://pages.github.com&#34; target=&#34;_blank&#34;&gt;GitHub Pages&lt;/a&gt;にPUSHしている。&lt;/p&gt;

&lt;p&gt;その、日記用Markdownファイルを生成するスクリプトはAutomatorで書いた。これから、そのMarkdownファイル(拡張子は.md)を右クリックして「サービス」メニューからgitコミットするスクリプトのテストを行う。&lt;/p&gt;

&lt;p&gt;まずファイルをaddして、それからcommit。gitコマンド的には、いちどaddされているファイルをもう一回addしても問題ないようなので、何度でも実行可能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;日記gitのルートディレクトリ&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;currentDate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date +%FT%T%z &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/\(.\{22\}\)/\1:/&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;ext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*.&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed &lt;span class=&#34;s2&#34;&gt;&amp;#34;y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;md&amp;#34;&lt;/span&gt; -a ! -d &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
		sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/^date: &amp;#34;[^&amp;#34;]*&amp;#34;$/date: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$currentDate&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;/g&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;
    /usr/bin/git add &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;

/usr/bin/git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;[add|mod] dayly post&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;日記の中の日付(日記の更新日)はcommitした瞬間の日付に上書きしている。日付フォーマットが&lt;code&gt;date&lt;/code&gt;コマンドのままだとおかしくなる（タイムゾーン「+0900」ではダメで、「+09:00」だとOK）ので強引に変更している、など。強引でよろしくない感じのスクリプトだが、まあとりあえず動く。&lt;/p&gt;
</description>
    </item>
    
    
    
    
    
    <item>
      <title>日記の自動化の続きとかいろいろ</title>
      <link>https://diary.a3size.com/2018/05/12/</link>
      <pubDate>Sat, 12 May 2018 10:47:26 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/05/12/</guid>
      <description>

&lt;p&gt;しばらくは日記を書きながら、ついでにアップロードの実験をしているので謎のエントリーが増えると思う。&lt;/p&gt;

&lt;h2 id=&#34;日記に書きたいことメモ-順不同&#34;&gt;日記に書きたいことメモ(順不同)：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;日記の設定を日記にメモする、更なる自動化の模索&lt;/li&gt;
&lt;li&gt;Instagramに対していいたいこと、または収益化について思うこと&lt;/li&gt;
&lt;li&gt;ニコニコはどうなるのかの妄想&lt;/li&gt;
&lt;li&gt;最近の国会と、政治ってそもそもそういうことだったっけみたいな浅い話&lt;/li&gt;
&lt;li&gt;フロントエンド周りの技術について（これは定期的に書こうと思わないとダメなやつだ）&lt;/li&gt;
&lt;li&gt;甥っ子が可愛い、または甥っ子を用いたスクワットについて&lt;/li&gt;
&lt;li&gt;夜のご飯が最適化されないって文明としてどうよ&lt;/li&gt;
&lt;li&gt;アニメ&lt;/li&gt;
&lt;li&gt;ゲーム&lt;/li&gt;
&lt;li&gt;どうぶつの森奴隷&lt;/li&gt;
&lt;li&gt;公共空間のトイレの話とジンクスについて&lt;/li&gt;
&lt;li&gt;ラジオのある文化的な暮らし&lt;/li&gt;
&lt;li&gt;Franzに色々させてみたい、させてみる、なんならばFranzじゃなくてもいい&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    
    
    <item>
      <title>flickrはイケているか</title>
      <link>https://diary.a3size.com/2018/04/24/</link>
      <pubDate>Tue, 24 Apr 2018 01:37:00 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/04/24/</guid>
      <description>

&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/king_nomura/39833015115/in/dateposted-public/&#34; title=&#34;img395&#34;&gt;&lt;img src=&#34;https://farm5.staticflickr.com/4790/39833015115_9f394d855e_k.jpg&#34; alt=&#34;このボタンを押してください&#34; width=&#34;2048&#34; height=&#34;1375&#34; /&gt;&lt;/a&gt;&lt;script async src=&#34;//embedr.flickr.com/assets/client-code.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;日記のサムネイルにflickrの画像は使えないだろうか。という実験。&lt;/p&gt;

&lt;p&gt;肝心の写真がイケていないというオチ、ではなくて。&lt;/p&gt;

&lt;p&gt;試しにflickrのEmbedスクリプトを出力して埋め込んでみたのだが。読み込み時の画面幅に合わせてスタイルをゴニョゴニョしちゃうタイプのスクリプトになっているので、表示後の画面幅変更に対応できていない。この微妙にレスポンシブじゃない考え方はどこかではメジャーなのかな、海外のテンプレで他にもみた気がする。……良くない。&lt;/p&gt;

&lt;p&gt;というか、flickrはきっと思想的には埋め込まれる前提じゃないんだな。狙ってやっているなら潔いようにも思うが、なんとなくだが単に周回遅れ（それも2周くらい）な気がする。この間も買収云々があったりと、flickrはちっとも「イケてる」感じのするサービスではなくなった。とはいえInstagramだって親会社はFacebookになってしまったし、APIの締め付けがキツいしで、操作性云々とは違うところで微妙。&lt;/p&gt;

&lt;p&gt;写真共有サービスなんて、儲からないからこんな感じなのかな。使えているうちはいいけれども、どんなサービスであっても、10年後も今とおんなじサービス形態で生き残ってくれる保証はないという201x年。未来はまだか。&lt;/p&gt;

&lt;h2 id=&#34;hugoのshortcodesをちまちま増やす&#34;&gt;Hugoのshortcodesをちまちま増やす&lt;/h2&gt;

&lt;p&gt;今日もHugoの話をちょっとメモしておくと、上記のflickrもそうだが、shortcodeをいくつか自作している。といっても、PCで埋め込みたいタグを書いたものと、AMP対応のためにそのタグを書き直したもの、という簡単な出し分けをしているだけであるが。&lt;/p&gt;

&lt;p&gt;現時点では&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;flickr&lt;/li&gt;
&lt;li&gt;amazon&lt;/li&gt;
&lt;li&gt;img&lt;/li&gt;
&lt;li&gt;iframe&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の4つができた。
たとえば &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; タグをそのまま書くのではなく、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;***&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;160&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;120&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;テスト&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
↓
{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;***&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;160&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;120&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;テスト&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;としておく。&lt;/p&gt;

&lt;p&gt;これをPCでは、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&amp;lt;img
src=&amp;#34;{{ .Get &amp;#34;src&amp;#34; }}&amp;#34;
alt=&amp;#34;{{ .Get &amp;#34;alt&amp;#34; }}&amp;#34;
{{ with (.Get &amp;#34;width&amp;#34;) }} width=&amp;#34;{{ . }}&amp;#34;{{ end }}
{{ with (.Get &amp;#34;height&amp;#34;) }} height=&amp;#34;{{ . }}&amp;#34;{{ end }}
/&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AMPでは、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&amp;lt;p&amp;gt;
&amp;lt;amp-img
src=&amp;#34;{{ .Get &amp;#34;src&amp;#34; }}&amp;#34;
alt=&amp;#34;{{ .Get &amp;#34;alt&amp;#34; }}&amp;#34;
{{ with (.Get &amp;#34;width&amp;#34;) }} width=&amp;#34;{{ . }}&amp;#34;{{ end }}
{{ with (.Get &amp;#34;height&amp;#34;) }} height=&amp;#34;{{ . }}&amp;#34;{{ end }}
layout=&amp;#34;responsive&amp;#34;&amp;gt;&amp;lt;/amp-img&amp;gt;
&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;てな感じに。至極簡単な置きかえを行うことで、なんとなくAMP対応ができる。&lt;/p&gt;

&lt;p&gt;車輪を再発明している感は否めない。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Hugoで日記を書くための自動化</title>
      <link>https://diary.a3size.com/2018/04/22/</link>
      <pubDate>Sun, 22 Apr 2018 13:52:29 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/04/22/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://diary.a3size.com/2018/04/21/&#34;&gt;先日の日記&lt;/a&gt;に書いたように、BitBucketに日記をPUSHするとゴニョゴニョしてGitHub Pagesで公開されるという仕組みが完成した。&lt;/p&gt;

&lt;p&gt;日記を一日分追加すると、その日の日記ページのHTMLができる。のみならず、トップページに直近5日分の日記が載っているのでそこも再生成。すると日記が一日分後ろに押し出されて、ページネーション（次のページ）があるのでその後ろのページ全部が再生成させる。また日記につけたタグから、そのタグのリストページも再生成される。結果、数百のファイルが再生成される。うわーお、無駄が多い。でもなぁ、日記を一日分ずつ読み込むのもちょっと馬鹿馬鹿しい。まあそれはともかく、自動的にhtmlは作れるようになった。&lt;/p&gt;

&lt;p&gt;では次は日記を新規作成するところだ。コマンドラインから &lt;code&gt;Hugo new ファイル名&lt;/code&gt; でページのひな形が書き込まれたMarkdownファイルが完成する。これは楽チン……、と思いたいところだがもっと楽にしたい。&lt;/p&gt;

&lt;p&gt;Automatorを使って、例えば以下のような感じのシェルスクリプトをアプリ化（というかアイコン化）して、ボタン一発で今日の日記を作ってエディタを開く。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Hugoの作業ディレクトリ&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# この例では年別にファイルを格納したいので、post/YYYYディレクトリを作成している
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;targetYear&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date +&lt;span class=&#34;s2&#34;&gt;&amp;#34;%Y&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
mkdir -p &lt;span class=&#34;nv&#34;&gt;$targetYear&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 日付からファイル名を生成する。この例では post/YYYY/YYYY-MM-DD.mfd
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;targetDate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date +&lt;span class=&#34;s2&#34;&gt;&amp;#34;%Y-%m-%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;targetFile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;post/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetYear&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetDate&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.md&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 当該ファイルがなければ新規作成
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;content/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetFile&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  /usr/local/bin/hugo new &lt;span class=&#34;nv&#34;&gt;$targetFile&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# この例ではアプリを指定せずにファイルを開く
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;open &lt;span class=&#34;s2&#34;&gt;&amp;#34;content/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetFile&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで、日記を書くところまでアイコンクリック一回でだけで進められる。&lt;/p&gt;

&lt;p&gt;本当は、日記を書き終えたあともcommitとpushをアイコンクリック一回でやりたいが、エラー処理とか連打時の動作とか考えるとちょっと面倒そうなので、いったんここまでとして、今日記を書いているこのファイルをこのあと手動でcommitしてpushすることにする。&lt;/p&gt;

&lt;p&gt;……コミット時のメッセージが日本語だとうまく動かない？&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>GitHub Pagesにお引っ越し</title>
      <link>https://diary.a3size.com/2018/04/21/</link>
      <pubDate>Sat, 21 Apr 2018 01:28:00 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/04/21/</guid>
      <description>&lt;p&gt;WordPressでこの日記をリニューアルすると&lt;a href=&#34;https://diary.a3size.com/2017/08/30/&#34;&gt;以前書いた&lt;/a&gt;が、色々と考えてみた結果&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34;&gt;GitHub Pages&lt;/a&gt;に引っ越した。&lt;/p&gt;

&lt;p&gt;というのも、CPUパワーがどうのとか考えてみるに、この日記に動的な部分なんぞほとんどないので静的HTMLジェネレータで十分じゃないかと思い至り。&lt;/p&gt;

&lt;p&gt;しかもどんなツールで日記を書くとしても、今どきはMarkdown方式で書きたいわけで。Markdownが使えて、静的なHTMLが書き出せるものということで、&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;を選択した。&lt;/p&gt;

&lt;p&gt;現在、この日記のソースコードがある&lt;a href=&#34;https://bitbucket.org/&#34; target=&#34;_blank&#34;&gt;BitBucket&lt;/a&gt;から、自動生成されたものだけをGitHubにpushする。という実験中。&lt;/p&gt;

&lt;p&gt;うまくいったら、もう少し細かく手順をまとめるかも知れないし、まあググれば分かるかもしれないから書かないかも知れないし。&lt;/p&gt;

&lt;p&gt;引っ越した理由のもう一つはサイトのSSL化を実現するため。前のサイトでもできたのだが、GitHub PagesはSSLの発行も自動化されているという至れり尽くせり。&lt;a href=&#34;https://letsencrypt.org/&#34; target=&#34;_blank&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;は素晴らしい。寄附しちゃった。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Macの音声入力で日記を書くテスト</title>
      <link>https://diary.a3size.com/2018/02/13/</link>
      <pubDate>Tue, 13 Feb 2018 03:00:01 +0000</pubDate>
      
      <guid>https://diary.a3size.com/2018/02/13/</guid>
      <description>&lt;p&gt;流行に乗っかって、この文章マックの音声入力で書いてみている。新しい行新しい行&lt;/p&gt;

&lt;p&gt;この文章ハ3回目。久々に変なシャベリカタをしていてキモチ悪い。人間サマが、マックに合わせて、喋り方を変えてやっている。なんて親切だ。&lt;/p&gt;

&lt;p&gt;音声入力でプログラムを書くには、それなりの設定とそれなりの訓練が必要そう。ダイタイにして、日本語と英語をごちゃまぜにしゃべっているのはよくない。いふへ留守番。ほらね、まくいかない。&lt;/p&gt;

&lt;p&gt;あと、自分の妄想お口に出してイルのが、かなり恥ずかしい。うまく変換されないので、さらに文章が恥ずかしい。&lt;/p&gt;

&lt;p&gt;シャベルのが疲れてきた。うん、照れるったほうが早いような気がする。そんなに発音悪いのかなあ。それともマイクが遠いのかな。それともしゃべる速度がマックに会っていないのかな。マックがカタカナになるの気持ち悪い。マクドと区別がつかない。&lt;/p&gt;

&lt;p&gt;文章を書きながら、書き直したいなと何度も思うのに、音声入力を止めたくないからどんどんおかしな文章が出来上がっていく。Backspaceがほしい。あるのかな。なんでバックスペースちゃんと英語になるのはてな?新しい行&lt;/p&gt;

&lt;p&gt;酸素が足りない。喋るの飽きた。おしまい。おしマイケル。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Intel ME FWを自己責任でアップデートした</title>
      <link>https://diary.a3size.com/2018/02/09/</link>
      <pubDate>Fri, 09 Feb 2018 03:00:01 +0000</pubDate>
      
      <guid>https://diary.a3size.com/2018/02/09/</guid>
      <description>&lt;p&gt;もう二か月以上も前の話題なのだが、&lt;a href=&#34;https://www.intel.co.jp/content/www/jp/ja/support/articles/000025619/software.html56&#34; target=&#34;_blank&#34;&gt;インテル® マネジメント・エンジンの重要なファームウェア・アップデート (Intel-SA-00086)&lt;/a&gt;という事案があって。今ググったら、初報は去年の11月だった、えらい前の話で恐縮でございます。要するに、IntelのCPUにセキュリティ上の問題がみつかったのでマザーボードの会社のサイトから配布されるIntel ME(Management Engine)のFW(ファームウェア)アップデートをやってくれ、ということだった。&lt;/p&gt;

&lt;p&gt;というわけで、使用しているMSI社のH170 GAMING M3について、BIOSのアップデートがあるものだと思ってぼぉーっと二か月も待っていたのだが、新しい世代のマザーボードについてはアナウンスがあったがH170チップセット系のマザーボードについては一向に該当のアップデートが来る気配がない。もはやH170なんて過去のものだ、そんなものに貴重な開発リソースを割くことはできない、と。世間の風は冷たい。&lt;/p&gt;

&lt;p&gt;メーカーがやってくれないなら、自己責任で対策すればいいじゃない。&lt;/p&gt;

&lt;p&gt;というわけで、自己責任でIntel ME FWを広大なネットの海のどこからか拾ってきて適用した。参考にさせていただいたのは、こちらです。(&lt;a href=&#34;http://www.nozoana.work/article/455978527.html&#34; target=&#34;_blank&#34;&gt;i7 8700KのIntel ME FWを、MSI Z370 Tomahawkからアップデートしてみた～Intel H170/H270/Z170/Z270/Z370シリーズのIntel MEファームウェアを更新する方法～: ログヲーク ～仮想通貨や日々思ったことの日記～&lt;/a&gt;)。&lt;/p&gt;

&lt;p&gt;自作PCブームの初期の頃は、ハードウェアのパッケージに付属しているドライバ類はバージョンが古いので、最新のドライバをネットで探してくるのは当たり前の作業だった。その際に、販売元(海外メーカーの日本代理店)のWebサイトは情報が古かったりメンテナンスされていないことが多かったので、製造元や場合によっては使用されているチップのメーカーのサイトからダウンロードしてきたりした。更には同じメーカーの別のチップのドライバを設定ファイルをちょっといじって強引に突っ込んだりした。ただし、結構な確率でOSが立ち上がらなくなる。それでも、壊れてもいいからやってみようと思えば、案外いろんなことができる。&lt;/p&gt;

&lt;p&gt;そんな感じで、要はIntel ME FWをどこから見つけてくるか、なのだが、上記の記事を参考にして、&lt;a href=&#34;http://www.station-drivers.com/index.php?option=com_remository&amp;amp;Itemid=352&amp;amp;func=startdown&amp;amp;id=3303&amp;amp;lang=en&#34; target=&#34;_blank&#34;&gt;Intel Management Engine (ME / AMT) Firmware Version 11.8.50.3434 (S &amp;amp; H) (5MB)&lt;/a&gt;を適用することにした。このstation-drivers.comが安全なサイトかどうか確信は持てない、というあたりが自己責任な部分で、今回のケースではあとは「最新のマザーボードに買い直す」くらいしか選択肢がないからまあいいかな、と。&lt;/p&gt;

&lt;p&gt;無事ファームウェアをアップデートして、Intelのサイトにある「intel-sa-00086 検出ツール」で対策完了を確認。終わり。&lt;/p&gt;
</description>
    </item>
    
    
  </channel>
</rss>
