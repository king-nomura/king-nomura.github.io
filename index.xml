<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> 野村政行の「堪忍袋の緒を締めろ！」</title>
    <link>https://diary.a3size.com/</link>
    <description>Recent content on  野村政行の「堪忍袋の緒を締めろ！」</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>nomura masayuki</copyright>
    <lastBuildDate>Wed, 31 Jul 2019 00:17:50 +0900</lastBuildDate>
    
        <atom:link href="https://diary.a3size.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>ストレージを空けたいんだ</title>
      <link>https://diary.a3size.com/2019/07/31/</link>
      <pubDate>Wed, 31 Jul 2019 00:17:50 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2019/07/31/</guid>
      <description>&lt;p&gt;その昔はさぁ、ハードディスクってものがあるらしいよ、とかさぁ。遂にハードディスクが1GBの領域に到達したらしいよ、とかさぁ。&lt;/p&gt;

&lt;p&gt;などというインターネット老人会、そもそもインターネットがまだ研究者のものだった頃の話はさておいて。&lt;/p&gt;

&lt;p&gt;メインマシンのストレージをどこまで大きくするのか問題である。&lt;/p&gt;

&lt;p&gt;減っていく一方の空き容量に対して、青天井に増やしていけば解決なのかというと、これがそうでもない。ストレージがクラッシュしたとき、またはマシンがクラッシュしたときにどうリカバリするのか。バックアップを使って代替機を立ち上げようと思っても、その代替機のストレージが小さいと欲しいデータの容量には足りていたとしてもバックアップ自体が復元できない。だからマシンを買い替える際にストレージを大きくするのには抵抗がある。&lt;/p&gt;

&lt;p&gt;というわけでこの1〜2ヶ月くらいずっとストレージを空ける作戦を練っている。断捨離やらこんまり的なものにあまり興味はないが、ストレージを空けるには基本ひとつの手段しかない。すなわち「不要なものを捨てる」。&lt;/p&gt;

&lt;p&gt;しかし、不要なものを決められないからこそどんどんストレージが圧迫されていくのだ。まずは不要なものを不要であると認めるところから始めなければならない。&lt;/p&gt;

&lt;p&gt;試しに入れてみた程度のアプリは潔く捨てる。ドライバの類ならともかく、大した動機もなくインストールしたアプリは、どうせ次に立ち上げる時にはバージョンアップしていて最新版をダウンロードしなおす羽目になる。ならば使う時にまたダウンロードすればいい。例えば半年使わなかったらもうそのバージョンのアプリは要らないんじゃなかろうか。1年ならまず間違く。確定申告の電子申告作業でさえ、毎年必ず最新版のインストール作業から始まっているではないか。いや、確定申告関連のアプリこそ設定がめんどくさいのでアンインストールしたくないのだが。ともかく確定申告よりも起動頻度が低いアプリは不要である。&lt;/p&gt;

&lt;p&gt;「入手できなくなったときのために取っておいたアプリ」というのも、数年経って冷静に見回すともっと便利なアプリが出ていたり、そもそもそのアプリで行なっていた作業自体が要らないということも多い。ファイラとかアーカイバとか、なんであんなにたくさん出回っていたのだろう。……いかん、そんなことを考えるとインターネット老人会からお誘いがきてしまう。&lt;/p&gt;

&lt;p&gt;Xcodeが溜め込んでいる古いiOS関連のファイルやバックアップなども捨てた。必要になる場面がもしも出てきたら……、と思って残してみたが一向に出番はなかった。また最近の傾向として「サポートされていないバージョンのOSについては対応しない」という原則がクライアントと合意できることが非常に増えたように思う。野村がそもそもアプリ開発をメインの仕事にしていないのと、クライアントの特性によるところも大きいとは思うが、それが時代の潮流であるようにも感じられる。同様にAndroidも、古いOSに関連するファイルを常に持っている必要はないので削除した。&lt;/p&gt;

&lt;p&gt;ドキュメントや作業ファイルなどのデータの要・不要はどう判断するか。&lt;/p&gt;

&lt;p&gt;まず「終わった仕事」のデータはセキュリティの観点からストレージにホットスタンバイさせておくべきではない（もちろん破棄すべきデータは破棄した上での話）。事故が起こっては困るので、なるべく早くストレージから引き上げる。「終わったけれどもまだ参照したい仕事」や長期にわたっている仕事は、まず契約単位など時系列で分類して、契約が終わったものは一旦データを引き上げてしまった方が掃除がしやすい。契約終了後にも残しておく必要があるデータ、すなわち現在の契約で使うデータをまた現在の作業フォルダに入れ直す。このように、過去のデータは必要な時に簡単にストレージに入れ直せるようにしておければ良いのではないかと考えている。問題はデータを引き上げる先だ。&lt;/p&gt;

&lt;p&gt;データのバックアップはまずDVD-Rメディアに焼いている。どうやらこの手のメディアの耐用年数は10年程度だと思っていた方がよいらしい。10年は短いようにも感じるがこれでもハードディスクやSSD、USBメモリよりは長期保存に適しているのだから仕方ない。で、終わったけれどもまだ参照したいようなデータがDVD-Rメディアだけに入っていると、外出先などですぐに参照できなくて困ることがある。この不安から、ついついストレージに不要なデータをたくさん残しっぱなしにしてしまう。&lt;/p&gt;

&lt;p&gt;アプリと同じように、データは必要なときになったらダウンロードすればいいのではないか。つまり、オンラインストレージを使えば良いのではないか。&lt;/p&gt;

&lt;p&gt;データをオンラインストレージにおくにはセキュリティの不安がある。そもそも契約上オンラインストレージが利用できない案件もある。とはいえ、例えば「念のため取っておいているデータ」を外付けストレージに入れて持ち歩いたら、今度はそのストレージの故障や紛失が怖い。そう考えると下手なモバイルストレージよりも適正に運用できているオンラインストレージのほうが安全じゃないだろうか。&lt;/p&gt;

&lt;p&gt;そんあわけで、今更ながらG Suiteの契約をすることにした。これまで無料のGoogleドライブは使っていたが、無料サービスは有料サービスに比べて、サービス運営側の匙加減でデータを消されてしまう（アカウントを凍結されてしまう）可能性があるし、そもそも15GBの容量ではデータのバックアップ先として足りない。そこで、G Suiteだ。&lt;/p&gt;

&lt;p&gt;証明書やパスワード、ログのようなファイルは例外として、移動できそうなファイルはオンラインストレージに退避させることができるのではないか、と考えてぼちぼちファイルを移動させている。手始めにプライベートな実験ファイルなどから。それでも結構な量のデータがストレージに入ったままになっていてびっくりした。2000年のファイルって、何に使うんだよ。このインターネット老人会め。&lt;/p&gt;

&lt;p&gt;そんなこんなで何もしないのに比べて40〜50GB程度は空き容量が増えた。ほかにもシステム関連のごみファイルが、何回もOSをアップデートしたりマシンを引っ越したりしているせいで大量にたまっているような気がするが、これを消すにはOSのクリーンインストールがひつようということで、流石にそれはめんどくさい。ひとまずジリ貧な状態乗り切ったからヨシ。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>ハードウェアとサブスクリプション</title>
      <link>https://diary.a3size.com/2019/07/05/</link>
      <pubDate>Fri, 05 Jul 2019 00:09:32 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2019/07/05/</guid>
      <description>&lt;p&gt;梅雨が梅雨らしいジメジメ具合で、たまに外に出ようと思うと雨が降っている、とさえ思えてしまう。ちょっと大きめの荷物を運びたいのに、運べない。&lt;/p&gt;

&lt;p&gt;ちなみに荷物とは「Oculus Rift」と書いてある大きな箱2つのことで、つまりOculus Rift Sを買ったことで、初代のOculus Riftのほうはこのまま置いておいても仕舞っておいても場所を取って邪魔になるので、人に譲ることにしたのだ。&lt;/p&gt;

&lt;p&gt;ハードウェアが場所を取ってしまうのは仕方がない。所有権の移動自体は手続きの問題だが、このハードウェアを渡すには、この物質を運ぶしかない。&lt;/p&gt;

&lt;p&gt;いかんなぁ。このままでは家の中がモノで埋まってしまう。空間を確保せねば。圧縮せねば。&lt;/p&gt;

&lt;p&gt;で、やはり一番圧縮しやすいのは「情報」だ。まずは書籍だ。とくに雑誌は、定期的に本屋から我が家に移動し、定期的に廃品回収に回される。中に書かれている情報は変化しないのに、紙だけが移動している。&lt;/p&gt;

&lt;p&gt;そこでサブスクリプションである。野村が最近読んでいる雑誌は2冊だった。ちょっとした米袋のような質量の月刊アフタヌーンについては、 &lt;a href=&#34;https://comic-days.com/&#34; target=&#34;_blank&#34;&gt;コミックDAYS&lt;/a&gt; を契約することで我が家に運ぶ必要が無くなってとても嬉しかった。もう一冊、ヤングキングアワーズを購読していたのだが、これはそもそも売っている書店が少ないのに加えて電子版もなかなか見当たらない。唯一、発売日から10日遅れて &lt;a href=&#34;https://magazinewalker.jp/&#34; target=&#34;_blank&#34;&gt;マガジン WALKER&lt;/a&gt; で読めることを知ったので、これも先月より契約することにした。&lt;/p&gt;

&lt;p&gt;どちらのサブスクリプションも、実は月額がそれぞれ目的の雑誌一冊分の代金に近い。つまり、金額だけを見ればすでにお得。マガジンWALKERはアップ日が遅いし、他に読みたい雑誌がないし、インターフェースも悪いのだが、若干金額がお得なので我慢できそうだ。コミックDAYSのほうは発売日＝アップ日（しかも午前0時）だし、うっかり他誌もファンになってしまったし、なによりあの凶器のような質量を持ち上げずに読めるので十分にお得だ。&lt;/p&gt;

&lt;p&gt;雑誌が電子になることで、物理的な紙の移動がなくなり、もろもろ単純に楽チンになった。発売日に天気やカバンの大きさを気にして外出する必要が無くなった。読んだ後に雑誌を積んでおく場所を少し空けることができた（まだ嫁サマが読んでいる女性向けマンガ雑誌がデジタルに移行していない）。そして、読んだ紙を捨てる（廃品回収に出す）という環境に対してやや後ろめたい行為をしなくてよくなった。捨てるためにビニール紐で縛ったりするのも面倒な上に「この紐はなんのために？」とか考えだすと色々とモヤモヤしてしまうものだが、それが無くなった。紙には紙の良さがあるし読みやすさもあると理解しているつもりだが、それを上回る心の楽さを感じている。&lt;/p&gt;

&lt;p&gt;本当は単行本や書籍もなるべく電子で買いたいのだが、それでも「これは紙で持っておきたい」と思う書籍もままあって、まだまだ書店という業態には潰れないでいてほしいなぁと願っている。もっともっと店舗数は少なくなってしまうんだろうが。&lt;/p&gt;

&lt;p&gt;さて、この他にも音楽などのサブスクリプションの話やら、そこからさらにキャッシュレスの話を書こうかと思ったんだが、今日はなんだか「7payの話」でもちきりなので、もうお腹いっぱい。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>GlideというPWAを作るサービスで遊んでみる</title>
      <link>https://diary.a3size.com/2019/04/11/</link>
      <pubDate>Thu, 11 Apr 2019 09:06:24 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2019/04/11/</guid>
      <description>&lt;p&gt;生きています（定型文）。&lt;/p&gt;

&lt;p&gt;ネットサーフィンしていたら「&lt;a href=&#34;https://www.glideapps.com&#34; target=&#34;_blank&#34;&gt;Glide&lt;/a&gt; 」というサービスを見つけた。GoogleスプレッドシートからPWA(Progressive Web Apps)を生成できるというので、試しに4年前から書いている&lt;a href=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vRpc5DX-Aw_6eeZjT3SFNZBCz7tVNKTpFox77lW_kG6-2KQHiQY0erbuITxNp0_DopC3KJ00qJuo1xz/pubhtml?gid=2109559652&amp;amp;single=true&#34; target=&#34;_blank&#34;&gt;「もう一度観たい映画」のスプレッドシート&lt;/a&gt;をPWA化してみた。
それがこちら：&lt;a href=&#34;https://go.glideapps.com/play/QCfXmev81rT0GeuwHc2C&#34; target=&#34;_blank&#34;&gt;もう一度観たい映画&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;正味10分くらいでこれくらいの出来。すごいなぁ。デザインとかは全然作り込めないんだが、とにかく楽チンすぎる。
Webページをテンプレートから自動生成するサービスとかも最近は良い出来なので、趣味的、同人的なものなら一からアプリ作らずにこういうサービスを使ってしまった方がいいんだろうな。
例えば地元のグルメマップ、商店街アプリとかに使う。スプレッドシートのほうの工夫次第で（Googleフォームを組み合わせるなど）、更新作業も楽にしたりクーポン発行とかもできるんじゃないかな。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>2018年は映画を観ていない</title>
      <link>https://diary.a3size.com/2019/01/02/</link>
      <pubDate>Wed, 02 Jan 2019 22:33:45 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2019/01/02/</guid>
      <description>&lt;p&gt;気づいたらまたしても日記書いていなかったじゃないか。しかも去年の映画視聴記録もまとめていないじゃないか。&lt;/p&gt;

&lt;p&gt;というわけで、急いで作った：&lt;a href=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vRpc5DX-Aw_6eeZjT3SFNZBCz7tVNKTpFox77lW_kG6-2KQHiQY0erbuITxNp0_DopC3KJ00qJuo1xz/pubhtml?gid=2109559652&amp;single=true&#34; target=&#34;_blank&#34;&gt;もう一度観たい映画2018&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;いつものように、もう一度観たいかどうかという観点で順番をつけているが、大まかな雰囲気で並べているんだなぁと思ってもらいたい。&lt;/p&gt;

&lt;p&gt;そんなことより、圧倒的に2018年は観ている本数が少ない。Amazonプライムでもっぱらドラマシリーズものに手を出してしまっているせいで、自宅でもあまり映画は観ていない。
観たかった映画とうまくタイミングが合わなかっただけではなく、観たい映画自体がちょっと少なかった印象がある。ここ数年見逃していた作品や、ルーツ的なものや関連作品として古い作品への興味が高まっているので、本当はレンタルなどでもっとそういう作品を見るべきなのだろう。&lt;/p&gt;

&lt;p&gt;例えば、今更ながら「ロッキー」を観た。さすが、面白いよね、「ロッキー」。さすがに古い作品だし低予算ならではの淡白さもありながら、これが若者たちに受け入れられた時代背景なども含めて興味深い作品だと思う。&lt;/p&gt;

&lt;p&gt;というわけで2019年はひょっとすると古い作品をたくさん観るかもしれない。&lt;/p&gt;

&lt;p&gt;……いやまてよ、やっぱりたくさんは観ないかもしれない。今、Amazonプライムでずっと「ゲーム・オブ・スローンズ」を観ているので、それが観終わるまではちょっと……。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>ゲームを消化したい</title>
      <link>https://diary.a3size.com/2018/06/24/</link>
      <pubDate>Sun, 24 Jun 2018 14:04:46 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/06/24/</guid>
      <description>

&lt;p&gt;「暇になったらやるリスト」がゲーム以外に山積みなので、本当にやりたいゲームは「暇じゃなくてもやるリスト」に入れないといけない。人生のスケジューリングに失敗している。またはどうにかしてマルチタスク人間になる必要があるが、そうすると自分Aよりも自分Bのやっていることが楽しそうで自分Aが怒り出す、という事態が。こんな話を藤子不二雄の漫画で読んだ気がする（多分ドラえもん）。&lt;/p&gt;

&lt;h2 id=&#34;detroit-become-human&#34;&gt;DETROIT: BECOME HUMAN&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B07B6CLVR8/ref=as_li_ss_il?ie=UTF8&amp;linkCode=li3&amp;tag=diarya3sizeco-22&amp;linkId=b2b35bee9ae5fc30815945a9e28ee458&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B07B6CLVR8&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=diarya3sizeco-22&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://ir-jp.amazon-adsystem.com/e/ir?t=diarya3sizeco-22&amp;l=li3&amp;o=9&amp;a=B07B6CLVR8&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.quanticdream.com/fr/&#34; target=&#34;_blank&#34;&gt;Quantic Dream&lt;/a&gt;の最新作、&lt;a href=&#34;https://www.jp.playstation.com/games/detroit-become-human/&#34; target=&#34;_blank&#34;&gt;DETROIT: BECOME HUMAN&lt;/a&gt;をとりあえず一周目終了。UIがカッコイイということで普段ゲームをやらない層でも話題になっているらしいが、そんな理由でいいのでまあプレイして欲しいゲームだ。&lt;/p&gt;

&lt;p&gt;で、一周目終了したのだが、自分が観たストーリーを人に教えたくない。何故ならば、このゲームは分岐が多い上に正解がない。他の人がプレイしたら違うストーリーになっているはずで(もちろん大筋は変わらないと思うが)、しかも自分が選んだ選択のせいで知ることができなくなった伏線や謎もあって、他人とこのゲームの話がしたいのに話ができないじゃないか！フラストレーション！&lt;/p&gt;

&lt;p&gt;例えば、これは多くのところでネタバレされているがメニュー画面に登場するアンドロイド「クロエ」も本編に絡んでくる上に、「初めてチューリング・テストに合格したアンドロイド」(&lt;a href=&#34;https://ja.wikipedia.org/wiki/デトロイト_ビカム_ヒューマン&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;)というあたりで、「チューリング・テストに合格ってことはつまり、え？え？」みたいな。スタートボタン押してからメニュー画面出ている間にちょっとトイレ行ってくるわ、みたいなこともできない。&lt;/p&gt;

&lt;p&gt;その大筋の話をすると、アンドロイドと人間の区別が付かなくなったらどうなりますか、という話。「ブレードランナー」 + Quantic Dreamらしい人の心理にこだわったストーリーとなっている。映画のようにぼおっと観ていたいのに、操作を迫られるから困る(そして嬉しい)。&lt;/p&gt;

&lt;p&gt;早く二周目やりたいが、それ以外にやらねばならないゲームが。というかゲーム以外ががが。&lt;/p&gt;

&lt;h3 id=&#34;life-is-strange-before-the-storm&#34;&gt;LIFE IS STRANGE: Before the Storm&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B07B422RFF/ref=as_li_ss_il?ie=UTF8&amp;linkCode=li3&amp;tag=diarya3sizeco-22&amp;linkId=600c2ae3c63dc9f93dac9b7249e2683b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B07B422RFF&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=diarya3sizeco-22&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;https://ir-jp.amazon-adsystem.com/e/ir?t=diarya3sizeco-22&amp;l=li3&amp;o=9&amp;a=B07B422RFF&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;http://www.jp.square-enix.com/lisbts/&#34; target=&#34;_blank&#34;&gt;ライフ イズ ストレンジ ビフォア ザ ストーム&lt;/a&gt;」(カタカナで書くとむっちゃかっこ悪い)は「&lt;a href=&#34;http://www.jp.square-enix.com/lis/&#34; target=&#34;_blank&#34;&gt;LIFE IS STRANGE&lt;/a&gt;」の外伝。&lt;/p&gt;

&lt;p&gt;外伝なので本編よりも長くはないし、本編のファンにとっては本編に登場する登場人物があちこちに出てくるボーナスコンテンツくらいな感じではある。ただ、今からプレイする人がいるならば、どっちからやってもいいかなーとは思う。それくらい、単体でも成り立つように丁寧に作られていたと思う。&lt;/p&gt;

&lt;p&gt;一貫して、思春期の心の痛みや人生の選択についての話ではあるが、本作品ではもう一つ「人生は舞台」「誰のために嘘をつくのか」というテーマがあり、これもまたある意味で人生の選択だよなぁ、と思う。薬物描写が出てくるためにCEROが「D」だが、リアル10代がプレイするよりもおっさんおばさんになってからプレイしたほうが、主人公を見守る大人たちの視点も持てて楽しめる気がする。&lt;/p&gt;

&lt;h3 id=&#34;日本語版-について&#34;&gt;「日本語版」について&lt;/h3&gt;

&lt;p&gt;「LIFE IS STRANGE: Before the Storm」(以下、「LiS:BtS」)は結構前にSteamで英語(つまり全世界バージョンの)PC版を購入だけしておいて、やがて日本語吹き替え音声が追加ダウンロードになるまで、と放置していた。&lt;/p&gt;

&lt;p&gt;「DETROIT: BECOME HUMAN」が終わった直後にPS4を何気なく操作してオンラインショップに行ったらば、PS4版がちょうど配信開始されていた。「あれ？もしかして日本語吹き替え版が完成したってことか？」と慌ててSteamを観てみると、なんとPS4版発売と同じ日にSteamの日本語吹き替えも配信されているではないか！ということで速攻ダウンロード＆プレイ開始となった。&lt;/p&gt;

&lt;p&gt;「LiS:BtS」は全世界発売元がスクウェア・エニックスだし、前作も国内販売版があり、発売前から「日本語吹き替え作っているよ！」と公式アナウンスが早々にあったので吹き替えが終わるのを待つことができた。だが、これは結構メーカーが「頑張った」対応で、一ゲーマーとしては感謝しかないのである。&lt;/p&gt;

&lt;p&gt;「わざわざ日本語に翻訳する」という作業にコストをかけるからにはそれだけ「日本語版なら買う」というユーザーの数が必要になる。しかも「日本語版にするために先に買う」人はいないのだから、この翻訳作業は先行投資になる。翻訳だけではなく吹き替えも、となると声優が必要となるので更にコスト増だ。&lt;/p&gt;

&lt;p&gt;翻訳の質にしてもいくつもの選択肢がある。専門チームを作る、外部の翻訳サービスを使う、「機械翻訳」を噛ますだけの場合もあれば、最悪ファンが作った翻訳を使うという選択肢さえあるが、それでも翻訳コストは無料にはならない。なぜなら、わざわざ「英語を日本語に差し替える」作業が発生するからだ。&lt;/p&gt;

&lt;p&gt;本作、「LiS:BtS」の日本語吹き替えは見事なできばえだが、それでもPC版では音声のズレなど不自然な箇所はいくつかあった。そもそも翻訳は、音声であっても文字であっても、元々の英語と吹き替えの日本語の長さが違うから、単に差し替えるだけではなくて詰めたり伸ばしたりしないとおかしなことになる。ゲームの場合はさらに条件分岐で表現が変わる可能性があるので、作業量が増える。&lt;/p&gt;

&lt;p&gt;世界の面白いゲームを日本語でプレイしたければ、日本語でプレイしたいユーザーがここにいるぞ！ということを発信しなければならない。さもなくば、頑張って英語を覚えるしかない。ゲームに限らず他のものでもそうなのだが。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>しつこいけれど、また自動化の話</title>
      <link>https://diary.a3size.com/2018/05/22/</link>
      <pubDate>Tue, 22 May 2018 01:32:13 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/05/22/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://diary.a3size.com/2018/04/21/&#34;&gt;以前書いた&lt;/a&gt;ように、この日記はMarkdown形式のテキストファイルを&lt;a href=&#34;https://bitbucket.org/&#34; target=&#34;_blank&#34;&gt;BitBucket&lt;/a&gt;のレポジトリにPUSHすると、CIサービスである&lt;a href=&#34;http://www.wercker.com&#34; target=&#34;_blank&#34;&gt;Wercker&lt;/a&gt;がWebhookされ、&lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;によってhtmlファイルを生成して、そのhtmlファイルを&lt;a href=&#34;https://pages.github.com&#34; target=&#34;_blank&#34;&gt;GitHub Pages&lt;/a&gt;にPUSHしている。&lt;/p&gt;

&lt;p&gt;その、日記用Markdownファイルを生成するスクリプトはAutomatorで書いた。これから、そのMarkdownファイル(拡張子は.md)を右クリックして「サービス」メニューからgitコミットするスクリプトのテストを行う。&lt;/p&gt;

&lt;p&gt;まずファイルをaddして、それからcommit。gitコマンド的には、いちどaddされているファイルをもう一回addしても問題ないようなので、何度でも実行可能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;日記gitのルートディレクトリ&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;currentDate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date +%FT%T%z &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/\(.\{22\}\)/\1:/&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;ext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*.&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed &lt;span class=&#34;s2&#34;&gt;&amp;#34;y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;md&amp;#34;&lt;/span&gt; -a ! -d &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
		sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/^date: &amp;#34;[^&amp;#34;]*&amp;#34;$/date: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$currentDate&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;/g&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;
    /usr/bin/git add &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;

/usr/bin/git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;[add|mod] dayly post&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;日記の中の日付(日記の更新日)はcommitした瞬間の日付に上書きしている。日付フォーマットが&lt;code&gt;date&lt;/code&gt;コマンドのままだとおかしくなる（タイムゾーン「+0900」ではダメで、「+09:00」だとOK）ので強引に変更している、など。強引でよろしくない感じのスクリプトだが、まあとりあえず動く。&lt;/p&gt;
</description>
    </item>
    
    
    
    
    
    <item>
      <title>日記の自動化の続きとかいろいろ</title>
      <link>https://diary.a3size.com/2018/05/12/</link>
      <pubDate>Sat, 12 May 2018 10:47:26 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/05/12/</guid>
      <description>

&lt;p&gt;しばらくは日記を書きながら、ついでにアップロードの実験をしているので謎のエントリーが増えると思う。&lt;/p&gt;

&lt;h2 id=&#34;日記に書きたいことメモ-順不同&#34;&gt;日記に書きたいことメモ(順不同)：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;日記の設定を日記にメモする、更なる自動化の模索&lt;/li&gt;
&lt;li&gt;Instagramに対していいたいこと、または収益化について思うこと&lt;/li&gt;
&lt;li&gt;ニコニコはどうなるのかの妄想&lt;/li&gt;
&lt;li&gt;最近の国会と、政治ってそもそもそういうことだったっけみたいな浅い話&lt;/li&gt;
&lt;li&gt;フロントエンド周りの技術について（これは定期的に書こうと思わないとダメなやつだ）&lt;/li&gt;
&lt;li&gt;甥っ子が可愛い、または甥っ子を用いたスクワットについて&lt;/li&gt;
&lt;li&gt;夜のご飯が最適化されないって文明としてどうよ&lt;/li&gt;
&lt;li&gt;アニメ&lt;/li&gt;
&lt;li&gt;ゲーム&lt;/li&gt;
&lt;li&gt;どうぶつの森奴隷&lt;/li&gt;
&lt;li&gt;公共空間のトイレの話とジンクスについて&lt;/li&gt;
&lt;li&gt;ラジオのある文化的な暮らし&lt;/li&gt;
&lt;li&gt;Franzに色々させてみたい、させてみる、なんならばFranzじゃなくてもいい&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    
    
    <item>
      <title>flickrはイケているか</title>
      <link>https://diary.a3size.com/2018/04/24/</link>
      <pubDate>Tue, 24 Apr 2018 01:37:00 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/04/24/</guid>
      <description>

&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/king_nomura/39833015115/in/dateposted-public/&#34; title=&#34;img395&#34;&gt;&lt;img src=&#34;https://farm5.staticflickr.com/4790/39833015115_9f394d855e_k.jpg&#34; alt=&#34;このボタンを押してください&#34; width=&#34;2048&#34; height=&#34;1375&#34; /&gt;&lt;/a&gt;&lt;script async src=&#34;//embedr.flickr.com/assets/client-code.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;日記のサムネイルにflickrの画像は使えないだろうか。という実験。&lt;/p&gt;

&lt;p&gt;肝心の写真がイケていないというオチ、ではなくて。&lt;/p&gt;

&lt;p&gt;試しにflickrのEmbedスクリプトを出力して埋め込んでみたのだが。読み込み時の画面幅に合わせてスタイルをゴニョゴニョしちゃうタイプのスクリプトになっているので、表示後の画面幅変更に対応できていない。この微妙にレスポンシブじゃない考え方はどこかではメジャーなのかな、海外のテンプレで他にもみた気がする。……良くない。&lt;/p&gt;

&lt;p&gt;というか、flickrはきっと思想的には埋め込まれる前提じゃないんだな。狙ってやっているなら潔いようにも思うが、なんとなくだが単に周回遅れ（それも2周くらい）な気がする。この間も買収云々があったりと、flickrはちっとも「イケてる」感じのするサービスではなくなった。とはいえInstagramだって親会社はFacebookになってしまったし、APIの締め付けがキツいしで、操作性云々とは違うところで微妙。&lt;/p&gt;

&lt;p&gt;写真共有サービスなんて、儲からないからこんな感じなのかな。使えているうちはいいけれども、どんなサービスであっても、10年後も今とおんなじサービス形態で生き残ってくれる保証はないという201x年。未来はまだか。&lt;/p&gt;

&lt;h2 id=&#34;hugoのshortcodesをちまちま増やす&#34;&gt;Hugoのshortcodesをちまちま増やす&lt;/h2&gt;

&lt;p&gt;今日もHugoの話をちょっとメモしておくと、上記のflickrもそうだが、shortcodeをいくつか自作している。といっても、PCで埋め込みたいタグを書いたものと、AMP対応のためにそのタグを書き直したもの、という簡単な出し分けをしているだけであるが。&lt;/p&gt;

&lt;p&gt;現時点では&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;flickr&lt;/li&gt;
&lt;li&gt;amazon&lt;/li&gt;
&lt;li&gt;img&lt;/li&gt;
&lt;li&gt;iframe&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の4つができた。
たとえば &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; タグをそのまま書くのではなく、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;***&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;160&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;120&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;テスト&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
↓
{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;***&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;160&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;120&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;テスト&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;としておく。&lt;/p&gt;

&lt;p&gt;これをPCでは、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&amp;lt;img
src=&amp;#34;{{ .Get &amp;#34;src&amp;#34; }}&amp;#34;
alt=&amp;#34;{{ .Get &amp;#34;alt&amp;#34; }}&amp;#34;
{{ with (.Get &amp;#34;width&amp;#34;) }} width=&amp;#34;{{ . }}&amp;#34;{{ end }}
{{ with (.Get &amp;#34;height&amp;#34;) }} height=&amp;#34;{{ . }}&amp;#34;{{ end }}
/&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AMPでは、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&amp;lt;p&amp;gt;
&amp;lt;amp-img
src=&amp;#34;{{ .Get &amp;#34;src&amp;#34; }}&amp;#34;
alt=&amp;#34;{{ .Get &amp;#34;alt&amp;#34; }}&amp;#34;
{{ with (.Get &amp;#34;width&amp;#34;) }} width=&amp;#34;{{ . }}&amp;#34;{{ end }}
{{ with (.Get &amp;#34;height&amp;#34;) }} height=&amp;#34;{{ . }}&amp;#34;{{ end }}
layout=&amp;#34;responsive&amp;#34;&amp;gt;&amp;lt;/amp-img&amp;gt;
&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;てな感じに。至極簡単な置きかえを行うことで、なんとなくAMP対応ができる。&lt;/p&gt;

&lt;p&gt;車輪を再発明している感は否めない。&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Hugoで日記を書くための自動化</title>
      <link>https://diary.a3size.com/2018/04/22/</link>
      <pubDate>Sun, 22 Apr 2018 13:52:29 +0900</pubDate>
      
      <guid>https://diary.a3size.com/2018/04/22/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://diary.a3size.com/2018/04/21/&#34;&gt;先日の日記&lt;/a&gt;に書いたように、BitBucketに日記をPUSHするとゴニョゴニョしてGitHub Pagesで公開されるという仕組みが完成した。&lt;/p&gt;

&lt;p&gt;日記を一日分追加すると、その日の日記ページのHTMLができる。のみならず、トップページに直近5日分の日記が載っているのでそこも再生成。すると日記が一日分後ろに押し出されて、ページネーション（次のページ）があるのでその後ろのページ全部が再生成させる。また日記につけたタグから、そのタグのリストページも再生成される。結果、数百のファイルが再生成される。うわーお、無駄が多い。でもなぁ、日記を一日分ずつ読み込むのもちょっと馬鹿馬鹿しい。まあそれはともかく、自動的にhtmlは作れるようになった。&lt;/p&gt;

&lt;p&gt;では次は日記を新規作成するところだ。コマンドラインから &lt;code&gt;Hugo new ファイル名&lt;/code&gt; でページのひな形が書き込まれたMarkdownファイルが完成する。これは楽チン……、と思いたいところだがもっと楽にしたい。&lt;/p&gt;

&lt;p&gt;Automatorを使って、例えば以下のような感じのシェルスクリプトをアプリ化（というかアイコン化）して、ボタン一発で今日の日記を作ってエディタを開く。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Hugoの作業ディレクトリ&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# この例では年別にファイルを格納したいので、post/YYYYディレクトリを作成している
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;targetYear&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date +&lt;span class=&#34;s2&#34;&gt;&amp;#34;%Y&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
mkdir -p &lt;span class=&#34;nv&#34;&gt;$targetYear&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 日付からファイル名を生成する。この例では post/YYYY/YYYY-MM-DD.mfd
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;targetDate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date +&lt;span class=&#34;s2&#34;&gt;&amp;#34;%Y-%m-%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;targetFile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;post/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetYear&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetDate&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.md&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 当該ファイルがなければ新規作成
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;content/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetFile&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  /usr/local/bin/hugo new &lt;span class=&#34;nv&#34;&gt;$targetFile&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# この例ではアプリを指定せずにファイルを開く
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;open &lt;span class=&#34;s2&#34;&gt;&amp;#34;content/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetFile&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで、日記を書くところまでアイコンクリック一回でだけで進められる。&lt;/p&gt;

&lt;p&gt;本当は、日記を書き終えたあともcommitとpushをアイコンクリック一回でやりたいが、エラー処理とか連打時の動作とか考えるとちょっと面倒そうなので、いったんここまでとして、今日記を書いているこのファイルをこのあと手動でcommitしてpushすることにする。&lt;/p&gt;

&lt;p&gt;……コミット時のメッセージが日本語だとうまく動かない？&lt;/p&gt;
</description>
    </item>
    
    
  </channel>
</rss>
